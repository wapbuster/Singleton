<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="6fd40194-c399-4f40-9f2e-1f441be211f1" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/indus/training/singleton/Singleton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/indus/training/singleton/Singleton.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/indus/training/singleton/Singleton.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/indus/training/singleton/Singleton.class" afterDir="false" />
    </list>
    <list id="3c670a8f-ae31-445f-b2de-2395b501ecc3" name="Revert &quot;To break singleton with the multithreading, extend the class with Thread and override run() by returning the instance of singleton. Then create two threads, join them with the main Thread, then call the getInstance() with both the threads and assign to singleton objects and later assert to test. They fail the test as two instances are created.&quot;" comment="Revert &quot;To break singleton with the multithreading, extend the class with Thread and override run() by returning the instance of singleton. Then create two threads, join them with the main Thread, then call the getInstance() with both the threads and assign to singleton objects and later assert to test. They fail the test as two instances are created.&quot;&#10;&#10;This reverts commit 53b3d6b0" />
    <ignored path="$PROJECT_DIR$/out/" />
    <ignored path="$PROJECT_DIR$/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/main/java/com/indus/training/singleton/Singleton.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="187">
              <caret line="36" column="9" selection-start-line="36" selection-start-column="9" selection-end-line="36" selection-end-column="9" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/test/java/com/indus/training/singleton/SingletonTest.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="319">
              <caret line="109" selection-start-line="109" selection-end-line="109" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/java/com/indus/training/singleton/SingletonThread.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="170">
              <caret line="10" selection-start-line="10" selection-end-line="10" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Singleton" />
        <option value="JUnit4 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Sunny" />
      </list>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="feature/Indus-Singleton" />
      </map>
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/pom.xml" />
        <option value="$PROJECT_DIR$/src/test/java/com/indus/training/singleton/SingletonTest.java" />
        <option value="$PROJECT_DIR$/src/main/java/com/indus/training/singleton/SingletonThread.java" />
        <option value="$PROJECT_DIR$/src/main/java/com/indus/training/singleton/Singleton.java" />
      </list>
    </option>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="importAutomatically" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="676" />
    <option name="width" value="697" />
    <option name="height" value="745" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="LearnSingleton" type="b2602c69:ProjectViewProjectNode" />
              <item name="LearnSingleton" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="LearnSingleton" type="b2602c69:ProjectViewProjectNode" />
              <item name="LearnSingleton" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="LearnSingleton" type="b2602c69:ProjectViewProjectNode" />
              <item name="LearnSingleton" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="LearnSingleton" type="b2602c69:ProjectViewProjectNode" />
              <item name="LearnSingleton" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="java" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="LearnSingleton" type="b2602c69:ProjectViewProjectNode" />
              <item name="LearnSingleton" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="java" type="462c0819:PsiDirectoryNode" />
              <item name="singleton" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="LearnSingleton" type="b2602c69:ProjectViewProjectNode" />
              <item name="LearnSingleton" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="LearnSingleton" type="b2602c69:ProjectViewProjectNode" />
              <item name="LearnSingleton" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="java" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit4" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4" value="" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="Errors" />
  </component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.RecentsKey">
      <recent name="com.indus.training.singleton" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="I:\Java\LearnSingleton\src\test\java" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="JUnit.SingletonTest">
    <configuration name="SingletonTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="LearnSingleton" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.indus.training.singleton.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.indus.training.singleton" />
      <option name="MAIN_CLASS_NAME" value="com.indus.training.singleton.SingletonTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SingletonTest.getInstance" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="LearnSingleton" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.indus.training.singleton.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.indus.training.singleton" />
      <option name="MAIN_CLASS_NAME" value="com.indus.training.singleton.SingletonTest" />
      <option name="METHOD_NAME" value="getInstance" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.SingletonTest" />
        <item itemvalue="JUnit.SingletonTest.getInstance" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6fd40194-c399-4f40-9f2e-1f441be211f1" name="Default Changelist" comment="" />
      <created>1547744033309</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1547744033309</updated>
      <workItem from="1547744037126" duration="14036000" />
    </task>
    <task id="LOCAL-00001" summary="Added Singleton class and testcase.">
      <created>1547745323900</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1547745323900</updated>
    </task>
    <task id="LOCAL-00002" summary="Singleton Design broken by cloning. To clone objects :&#10;1. Implement Clonable on the class we desire to clone&#10;2. override clone method.">
      <created>1547750651925</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1547750651925</updated>
    </task>
    <task id="LOCAL-00003" summary="Singleton Design broken by cloning. To clone objects :&#10;1. Implement Clonable on the class we desire to clone&#10;2. override clone method.&#10;Now to prevent someone from cloning and breaking singleton, return the instance created instead of super.clone().">
      <created>1547754943532</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1547754943532</updated>
    </task>
    <task id="LOCAL-00004" summary="Singleton can be broken by serialization too. Serialize an object and de-serialize to create new instance.">
      <created>1547757409520</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1547757409520</updated>
    </task>
    <task id="LOCAL-00005" summary="To avoid breaking of singleton by serialization, include readResolve() in the Singleton class and make sure the readResolve() returns the singleton instance.">
      <created>1547757755607</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1547757755607</updated>
    </task>
    <task id="LOCAL-00006" summary="To break singleton with the multithreading, extend the class with Thread and override run() by returning the instance of singleton. Then create two threads, join them with the main Thread, then call the getInstance() with both the threads and assign to singleton objects and later assert to test. They fail the test as two instances are created.">
      <created>1547766887791</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1547766887791</updated>
    </task>
    <task id="LOCAL-00007" summary="To break singleton with the multithreading:&#10; extend the class with Thread and override run() by returning the instance of singleton. Then create two threads, join them with the main Thread, then call the getInstance() with both the threads and assign to singleton objects and later assert to test. They fail the test as two instances are created sometimes, because the two threads check [ if (dbConn == null) ] in getInstance() and since they are null, they create new instances at same time. But sometimes the test passes as instances are same, this is because, one of the thread races first to create instance, while other thread will return the instance straight away, created by first thread as it checks [ if (dbConn == null) ].">
      <created>1547769254730</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1547769254730</updated>
    </task>
    <task id="LOCAL-00008" summary="To make singleton class thread proof, we use 'synchronized' keyword for the getInstance(). This makes only one thread access the method at a time.">
      <created>1547773835873</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1547773835873</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="SingletonTest - 2019.01.17 at 20h 00m 05s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="SingletonTest - 2019.01.17 at 20h 00m 09s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="SingletonTest - 2019.01.17 at 20h 00m 29s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="SingletonTest - 2019.01.17 at 20h 00m 31s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="SingletonTest - 2019.01.17 at 20h 00m 34s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="SingletonTest - 2019.01.17 at 20h 01m 28s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="SingletonTest - 2019.01.17 at 20h 01m 58s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="SingletonTest - 2019.01.17 at 20h 02m 44s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="SingletonTest - 2019.01.17 at 20h 07m 43s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
    <history-entry file="SingletonTest - 2019.01.17 at 20h 07m 48s.xml">
      <configuration name="SingletonTest" configurationId="JUnit" />
    </history-entry>
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="18128000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1382" height="754" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.22844176" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Designer" order="2" />
      <window_info id="UI Designer" order="3" />
      <window_info id="Learn" order="4" />
      <window_info id="Favorites" order="5" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info active="true" anchor="bottom" id="Run" order="2" visible="true" weight="0.3478261" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.27858293" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Docker" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="8" weight="0.4363929" />
      <window_info anchor="bottom" id="Database Changes" order="9" />
      <window_info anchor="bottom" id="Terminal" order="10" weight="0.6376812" />
      <window_info anchor="bottom" id="Event Log" order="11" side_tool="true" />
      <window_info anchor="bottom" id="Messages" order="12" weight="0.048309177" />
      <window_info anchor="bottom" id="Sequence" order="13" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Database" order="4" />
      <window_info anchor="right" id="Maven" order="5" />
      <window_info anchor="right" id="Palette&#9;" order="6" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list />
          </value>
        </entry>
        <entry key="User">
          <value>
            <list />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Added Singleton class and testcase." />
    <MESSAGE value="Singleton Design broken by cloning. To clone objects :&#10;1. Implement Clonable on the class we desire to clone&#10;2. override clone method." />
    <MESSAGE value="Now to prevent someone from cloning and breaking singleton, return the instance created instead of super.clone()." />
    <MESSAGE value="Singleton can be broken by serialization too. Serialize an object and de-serialize to create new instance." />
    <MESSAGE value="To avoid breaking of singleton by serialization, include readResolve() in the Singleton class and make sure the readResolve() returns the singleton instance." />
    <MESSAGE value="To break singleton with the multithreading, extend the class with Thread and override run() by returning the instance of singleton. Then create two threads, join them with the main Thread, then call the getInstance() with both the threads and assign to singleton objects and later assert to test. They fail the test as two instances are created." />
    <MESSAGE value="To break singleton with the multithreading:&#10; extend the class with Thread and override run() by returning the instance of singleton. Then create two threads, join them with the main Thread, then call the getInstance() with both the threads and assign to singleton objects and later assert to test. They fail the test as two instances are created sometimes, because the two threads check [ if (dbConn == null) ] in getInstance() and since they are null, they create new instances at same time. But sometimes the test passes as instances are same, this is because, one of the thread races first to create instance, while other thread will return the instance straight away, created by first thread as it checks [ if (dbConn == null) ]." />
    <MESSAGE value="To make singleton class thread proof, we use 'synchronized' keyword for the getInstance(). This makes only one thread access the method at a time." />
    <option name="LAST_COMMIT_MESSAGE" value="To make singleton class thread proof, we use 'synchronized' keyword for the getInstance(). This makes only one thread access the method at a time." />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/com/indus/training/singleton/SingletonTest.java</url>
          <line>108</line>
          <properties />
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/com/indus/training/singleton/SingletonTest.java</url>
          <line>109</line>
          <properties />
          <option name="timeStamp" value="17" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/com/indus/training/singleton/Singleton.java</url>
          <line>25</line>
          <properties />
          <option name="timeStamp" value="18" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/com/indus/training/singleton/Singleton.java</url>
          <line>28</line>
          <properties />
          <option name="timeStamp" value="19" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/com/indus/training/singleton/Singleton.java</url>
          <line>26</line>
          <properties />
          <option name="timeStamp" value="20" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/pom.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="323">
          <caret line="19" column="19" selection-start-line="19" selection-start-column="19" selection-end-line="19" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/junit/junit/4.12/junit-4.12-sources.jar!/org/junit/internal/runners/model/ReflectiveCallable.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="221">
          <caret line="13" selection-start-line="13" selection-end-line="13" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/junit/junit/4.12/junit-4.12-sources.jar!/org/junit/runners/ParentRunner.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="166">
          <caret line="331" selection-start-line="331" selection-end-line="331" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/junit/junit/4.12/junit-4.12-sources.jar!/org/junit/runners/model/FrameworkMethod.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="116">
          <caret line="49" selection-start-line="49" selection-end-line="49" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/com/indus/training/singleton/SingletonThread.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="170">
          <caret line="10" selection-start-line="10" selection-end-line="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/com/indus/training/singleton/SingletonTest.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="319">
          <caret line="109" selection-start-line="109" selection-end-line="109" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/com/indus/training/singleton/Singleton.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="36" column="9" selection-start-line="36" selection-start-column="9" selection-end-line="36" selection-end-column="9" />
        </state>
      </provider>
    </entry>
  </component>
</project>